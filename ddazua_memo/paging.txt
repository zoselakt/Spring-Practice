화면 페이징 처리
	ORDER BY보다 인덱스를 사용하면 정렬을 생략할 수 있다.
	인덱스라는 존재가 이미 정렬된 구조이므로 이를 이용해서 별도의 정렬을 하지 않는다.
	예를 들어 데이터베이스 테이블을 하나의 책이라고 가정하면, 인덱스는 각 페이지 번호를 의미한다.
	이를 통해서 원하는 내용을 위에서부터 혹은 반대로 찾아나가는 것을 스캔(scan)한다고 표현한다.

	데이터베이스에 테이블을 만들 때 PK를 부여하면 PK 컬럼을 기준으로 인덱스가 생성되고 이는 실제
	테이블의 데이터가 어디에 저장되어 있는 지를 찾을 수 있는 KEY 값이다. 실제 테이블의 데이터가
	저장된 각 행에는 ROWID라는 것이 존재하고 데이터베이스 내의 주소값을 의미한다.

	BNO	ROWID			ROWID	BNO	TITLE	CONTENT
	1	AAAE8A			AAAE8A	1	...	...
	2	AAAE8B			AAAE8B	2	...	...
	3	AAAE8C			AAAR8E	1000	...	...
	...	...			...	...	...	...
	588	AAAR8D			AAAE8C	3	...	...
	...	...			...	...	...	...
	1000	AAAR8E			AAAR8D	588	...	...
	...	...			...	...	...	...
-------------------------------------------------------------------------------------------------------------------
힌트(Hint) : /*+  */
	SELECT문에 실행하고 싶을 계획을 전달할 때 사용하는 문법.
	잘못 작성되어도 실행할 때에는 무시되며 별도의 오류는 발생하지 않는다.
	/*+ 로 시작되며 */로 마친다. 또한 뒤에 컬럼명을 작성할 때 ,를 사용하지 않는다.

	페이징 처리에서는 이미 정렬된 인덱스를 내림차순으로 가지고 오는 문법을
	힌트 내에 작성해준다. 별도의 정렬이 필요 없어지므로 문법의 가독성이 좋아진다.













